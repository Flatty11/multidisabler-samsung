#!/sbin/sh
#
# Flashable services disabler for G97[035][FN], G977B and N97[05][FN],
# A[1245]05[FN], A105M, A[25]05([YG]N|G) and A405FM, T51[05].
#
# by Ian Macdonald.
#
# Use this to prime your device after installing TWRP.

ZIPFILE=$3
OUTFD=$2

scr_wdth=50

# Detect real $OUTFD
#
if readlink /proc/$$/fd/$OUTFD 2>/dev/null | grep /tmp >/dev/null; then
  OUTFD=0
  for FD in $( ls /proc/$$/fd ); do
    if readlink /proc/$$/fd/$FD 2>/dev/null | grep pipe >/dev/null; then
      if ps | grep " 3 $FD " | grep -v grep >/dev/null; then
	OUTFD=$FD
	break
      fi
    fi
  done
fi

get_key() {
  local key=$( toolbox getevent -lqc 1  | awk '{ print $(NF-1) }' )
  [ $key = 02bf ] && key=KEY_BIXBY

  echo $key
}

q_and_a() {
  local q=$1
  shift

  # The strange formatting is to keep ui_print() happy.
  #
  local choice="[Vol Up]   = $1\nui_print      [Vol Down] = $2\n"
  [ -n "$3" ] && choice="[Bixby]    = $3\nui_print      $choice"

  ui_print " "
  ui_print " - $q"
  ui_print "     $choice"

  local n=99
  until [ $n -le $# ]; do
    unset UP DOWN BIXBY
    local a=$(get_key)

    case $a in
      *UP)
        UP=true
        n=1
        ;;
      *DOWN)
        DOWN=true
        n=2
        ;;
      *BIXBY)
        BIXBY=true
        n=3
        ;;
      *)
	n=99
        ;;
    esac

  done

  CHOICE=$(eval echo '$'$n)
  ui_print "   '$CHOICE' selected."
}

ui_print() {
  echo -ne "ui_print $1\n" >> /proc/self/fd/$OUTFD
  echo -ne "ui_print\n" >> /proc/self/fd/$OUTFD
}

print_full_bar() {
  ui_print "$(printf '%*s\n' $scr_wdth | tr ' ' '=')"
}

print_justified() {
  local str="$1"
  local str_len=${#str}
  local padding_len=$(( ($scr_wdth - $str_len - 2) / 2))
  local ljust="$(printf '%*s' $padding_len)"
  local rjust="$(printf '%*s' $(($padding_len + $str_len % 2)))"

  ui_print "=$ljust$str$rjust="
}

disable_fbe() {
  ui_print " - Disabling file-based encryption (FBE) for /data..."

  # S10 Qualcomm = fstab.qcom.
  # S10 range = fstab.exynos9820.
  # Note 10 range = fstab.exynos9825.
  # A[124]0 range = fstab.exynos7885.
  # A50 = fstab.exynos9610.
  # Tab A 10.1 range = fstab.exynos7885.
  #
  for i in /vendor/etc/fstab.[exynos|qcom][0-9][0-9][0-9][0-9]; do
    # Option 1: This replaces the offending line.
    #sed -i -e 's/fileencryption=[^,]*/encryptable/' $i

    # Option 2: This comments out the offending line and adds an edited one.
    sed -i -e 's/^\([^#].*\)fileencryption=[^,]*\(.*\)$/# &\n\1encryptable\2/g' $i
  done
}

disable_vaultkeeper() {
  ui_print " - Disabling vaultkeeperd..."

  sed -i -e 's/^[^#].*vaultkeeper.*$/# &/' \
	 -re '/\/system\/bin\/vaultkeeperd/,/^#?$/s/^[^#]*$/#&/' $ANDROID_ROOT/init.rc

  # Option 1: Unknown whether it even works.
  # sed -i -e 's/\(ro\.security\.vaultkeeper\.native=\)1/\10/' /vendor/build.prop
  #
  # Option 2: This works and apparently won't spam logcat, but is drastic.
  # rm $ANDROID_ROOT/system/bin/vaultkeeperd
  #
  # Option 3: This works and is and is the least invasive choice.
  chmod 0 $ANDROID_ROOT/system/bin/vaultkeeperd
}

disable_proca() {
  ui_print " - Disabling process authentication..."

  # G97[035][F0] = pa_daemon.rc
  # G977B, N97[05]F, A105F, A505F = pa_daemon_teegris.rc
  # T510 + T515 = pa_daemon_kinibi.rc
  #
  for i in /vendor/etc/init/pa_daemon*.rc; do
    [ -f $i ] && sed -i -e 's/^[^#]/# &/' $i
  done

  # Option 1: Works only if operable XML stanza is not the last in file.
  #sed -i -e '/<name>vendor\.samsung\.security\.proca<\/name>/,/<hal format="hidl">/d' /vendor/etc/vintf/manifest.xml
  #
  # Option 2: This is safer, but more complex.
  sed -i -e '/<hal format="hidl">/{N;/<name>vendor\.samsung\.security\.proca<\/name>/{:loop;N;/<\/hal>/!bloop;d}}' /vendor/etc/vintf/manifest.xml
}

disable_recovery_restoration() {
  ui_print " - Disabling restoration of stock recovery..."

  mv $ANDROID_ROOT/system/recovery-from-boot.p $ANDROID_ROOT/system/recovery-from-boot.p~
}

ui_print " "
print_full_bar
print_justified "Multi-disabler v1.6 for"
print_justified "G97[035][FN0], G977B, N97[05][FN] & N976B,"
print_justified "A[1245]05[FN], A105M, A[25]05G, A[25]05[YG]N,"
print_justified "A405FM and T51[05]."
print_justified "by Ian Macdonald"
print_full_bar
ui_print " "

bl=$(getprop ro.boot.bootloader)

# Firmware version starts at either 8th or 9th character, depending on length
# of bootloader string (12 or 13).
#
fw=${bl:$((${#bl} - 4)):4}

# Device is first 5 characters of bootloader string.
#
device=${bl:0:$((${#bl} - 8))}

if echo $device | grep -Ev 'G97([035][FN0]|7B)|N97([05][FN]|6B)|A([1245]05[FN]|105M|[25]05([YG]N|G)|405FM)|T51[05]' >/dev/null; then
  ui_print " - Unsupported device detected. Installation aborted."
  ui_print " "
  exit 1
fi
ui_print " - Detected a $device device on $fw firmware."

ui_print " - Mounting $ANDROID_ROOT..."
mount $ANDROID_ROOT
ui_print " - Mounting /vendor..."
mount /vendor

ZIPNAME=${ZIPFILE##*/}

if [ $ZIPNAME != ${ZIPNAME/_interactive//} ]; then
  INTERACTIVE=true
  ui_print " - Interactive installation selected."
fi

FBE=true
if [ -n "$INTERACTIVE" ]; then
  q_and_a 'Disable file-based encryption on /data?' yes no
  [ -n "$DOWN" ] && unset FBE
fi
[ -n "$FBE" ] && disable_fbe

VAULTKEEPER=true
if [ -n "$INTERACTIVE" ]; then
  q_and_a 'Disable Vaultkeeper?' yes no
  [ -n "$DOWN" ] && unset VAULTKEEPER
fi
[ -n "$VAULTKEEPER" ] && disable_vaultkeeper

PROCA=true
if [ -n "$INTERACTIVE" ]; then
  q_and_a 'Disable process authentication (proca)?' yes no
  [ -n "$DOWN" ] && unset PROCA
fi
[ -n "$PROCA" ] && disable_proca

STOCKREC=true
if [ -n "$INTERACTIVE" ]; then
  q_and_a 'Disable automatic restoration of stock recovery?' yes no
  [ -n "$DOWN" ] && unset STOCKREC
fi
[ -n "$STOCKREC" ] && disable_recovery_restoration

ui_print " - Unmounting /vendor..."
umount /vendor
ui_print " - Unmounting $ANDROID_ROOT..."
umount $ANDROID_ROOT

ui_print " "
ui_print " - Finished."
ui_print " "
